name: Update Rules

on:
  workflow_dispatch: {}
  schedule:
    - cron: "30 2 * * *"  # UTC 每天 02:30

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download Rules into Rules/Auto
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p Rules/Auto
          urls=(
            "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/refs/heads/master/Clash/Providers/BanAD.yaml"
            "https://raw.githubusercontent.com/dler-io/Rules/refs/heads/main/Clash/Provider/Media/YouTube.yaml"
            "https://raw.githubusercontent.com/dler-io/Rules/refs/heads/main/Clash/Provider/Media/Apple%20TV.yaml"
            "https://raw.githubusercontent.com/dler-io/Rules/refs/heads/main/Clash/Provider/Media/Disney%20Plus.yaml"
            "https://raw.githubusercontent.com/dler-io/Rules/refs/heads/main/Clash/Provider/Media/Netflix.yaml"
            "https://raw.githubusercontent.com/dler-io/Rules/refs/heads/main/Clash/Provider/Media/Max.yaml"
            "https://raw.githubusercontent.com/dler-io/Rules/refs/heads/main/Clash/Provider/TikTok.yaml"
            "https://raw.githubusercontent.com/dler-io/Rules/refs/heads/main/Clash/Provider/AI%20Suite.yaml"
            "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/gfw.txt"
          )
          for u in "${urls[@]}"; do
            name="$(basename "$u")"
            decoded_name="$(python3 -c 'import sys,urllib.parse; print(urllib.parse.unquote(sys.argv[1]))' "$name")"
            curl -fsSL "$u" -o "Rules/Auto/$decoded_name"
          done

      - name: Download Rules into Rules/Text
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p Rules/Text
          urls=(
            "https://raw.githubusercontent.com/Loyalsoldier/surge-rules/release/gfw.txt"
          )
          for u in "${urls[@]}"; do
            name="$(basename "$u")"
            curl -fsSL "$u" -o "Rules/Text/$name"
          done

      - name: Download Rules into Rules/System
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p Rules/System
          urls=(
            "https://raw.githubusercontent.com/Loyalsoldier/surge-rules/release/private.txt"
            "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/lancidr.txt"
            "https://raw.githubusercontent.com/dler-io/Rules/refs/heads/main/Clash/Provider/Apple.yaml"
          )
          for u in "${urls[@]}"; do
            name="$(basename "$u")"
            curl -fsSL "$u" -o "Rules/System/$name"
          done

      - name: Update managed BanAD block in Rules/AD Man.txt (keep single blank line)
        shell: bash
        run: |
          set -euo pipefail
          SRC="Rules/Auto/BanAD.yaml"
          OUT="Rules/AD Man.txt"
          TMP="$(mktemp)"

          if [[ ! -f "$SRC" ]]; then
            echo "BanAD.yaml not found at $SRC"
            exit 1
          fi

          # 提取有效内容（去掉BOM、CR字符和payload行）
          CONTENT="$(awk 'NR==1{sub(/^\xef\xbb\xbf/,"")}1' "$SRC" \
            | sed -E 's/\r$//' \
            | sed -E '/^[[:space:]]*payload:[[:space:]]*$/d')"

          mkdir -p Rules
          touch "$OUT"

          # 使用sed删除所有现有的BanAD区块（包括任何重复的）
          # 这个方法更可靠，直接删除BEGIN到END之间的所有内容
          sed -E '/^# BEGIN BanAD `\(auto\)`/,/^# END BanAD `\(auto\)`/d' "$OUT" > "$TMP"

          # 清理多余空行
          sed -i -E ':a; /^[[:space:]]*$/{ $d; N; ba; }' "$TMP"
          echo "" >> "$TMP"

          # 添加新的BanAD区块
          {
            echo "# BEGIN BanAD \`(auto)\`"
            printf "%s\n" "$CONTENT"
            echo "# END BanAD \`(auto)\`"
            echo ""
          } >> "$TMP"

          # 最终清理格式
          sed -i -E ':a; /^[[:space:]]*$/{ $d; N; ba; }' "$TMP"
          echo "" >> "$TMP"

          mv "$TMP" "$OUT"
          echo "BanAD block updated successfully"

      - name: Generate Rules/System/ChinaASN.txt from ASN-China
        shell: bash
        run: |
          set -euo pipefail
          URL="https://raw.githubusercontent.com/missuo/ASN-China/refs/heads/main/ASN.China.list"
          OUT="Rules/System/ChinaASN.txt"
          mkdir -p "$(dirname "$OUT")"
          {
            echo "payload:"
            curl -fsSL "$URL" \
              | sed 's/\r$//' \
              | sed 's/[[:space:]]*\/\/.*$//' \
              | grep -E '^[[:space:]]*IP-ASN,[0-9]+' \
              | awk '{print "  - " $0}'
          } > "$OUT"

      - name: Commit & push if changed
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Update Data"
          file_pattern: Rules/**

name: Update Rules

on:
  workflow_dispatch: {}
  schedule:
    - cron: "30 2 * * *"  # UTC 每天 02:30

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download Media/AI provider YAMLs into Rules/Auto (including BanAD.yaml)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p Rules/Auto
          urls=(
            "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/refs/heads/master/Clash/Providers/BanAD.yaml"
            "https://raw.githubusercontent.com/dler-io/Rules/refs/heads/main/Clash/Provider/Media/YouTube.yaml"
            "https://raw.githubusercontent.com/dler-io/Rules/refs/heads/main/Clash/Provider/Media/Apple%20TV.yaml"
            "https://raw.githubusercontent.com/dler-io/Rules/refs/heads/main/Clash/Provider/Media/Disney%20Plus.yaml"
            "https://raw.githubusercontent.com/dler-io/Rules/refs/heads/main/Clash/Provider/Media/Netflix.yaml"
            "https://raw.githubusercontent.com/dler-io/Rules/refs/heads/main/Clash/Provider/Media/Max.yaml"
            "https://raw.githubusercontent.com/dler-io/Rules/refs/heads/main/Clash/Provider/TikTok.yaml"
            "https://raw.githubusercontent.com/dler-io/Rules/refs/heads/main/Clash/Provider/AI%20Suite.yaml"
            "https://raw.githubusercontent.com/dler-io/Rules/refs/heads/main/Clash/Provider/Apple.yaml"
          )
          for u in "${urls[@]}"; do
            name="$(basename "$u")"
            decoded_name="$(python3 -c 'import sys,urllib.parse; print(urllib.parse.unquote(sys.argv[1]))' "$name")"
            curl -fsSL "$u" -o "Rules/Auto/$decoded_name"
          done

      - name: Append BanAD.yaml (strip header) to Rules/AD Man.txt
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p Rules
          SRC="Rules/Auto/BanAD.yaml"
          OUT="Rules/AD Man.txt"

          if [[ ! -f "$SRC" ]]; then
            echo "BanAD.yaml not found at $SRC"
            exit 1
          fi

          # 去 BOM、去 CR，删除从文件开头到第一条 payload:（含其本身）之间的所有内容
          # 若文件没有 payload:，则不删任何行（整文件保留）
          CONTENT="$(awk 'NR==1{sub(/^\xef\xbb\xbf/,"")}1' "$SRC" | sed -E 's/\r$//')"
          if echo "$CONTENT" | grep -qE '^[[:space:]]*payload:[[:space:]]*$'; then
            CONTENT="$(printf "%s\n" "$CONTENT" | sed -E '0,/^[[:space:]]*payload:[[:space:]]*$/d')"
          fi

          # 若有内容，先空一行再追加
          if [[ -n "$CONTENT" ]]; then
            {
              echo ""
              printf "%s\n" "$CONTENT"
            } >> "$OUT"
            echo "Appended to '$OUT'."
          else
            echo "No content to append from $SRC."
          fi

      - name: Generate Rules/Auto/ChinaASN.txt from ASN-China
        shell: bash
        run: |
          set -euo pipefail
          URL="https://raw.githubusercontent.com/missuo/ASN-China/refs/heads/main/ASN.China.list"
          OUT="Rules/Auto/ChinaASN.txt"
          mkdir -p "$(dirname "$OUT")"
          {
            echo "payload:"
            curl -fsSL "$URL" \
              | sed 's/\r$//' \
              | sed 's/[[:space:]]*\/\/.*$//' \
              | grep -E '^[[:space:]]*IP-ASN,[0-9]+' \
              | awk '{print "  - " $0}'
          } > "$OUT"

      - name: Commit & push if changed
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(rules): update provider YAMLs, AD Man.txt, and ChinaASN.txt"
          file_pattern: Rules/**
